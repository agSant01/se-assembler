Token(type: ORIGIN, val: 'org')
Token(type: IDENTIFIER, val: '0')
Token(type: NEW_LINE, val: '\n')
Token(type: TAB, val: '	')
Token(type: OPERATOR, val: 'JMPADDR')
Token(type: IDENTIFIER, val: 'start')
Token(type: COLON, val: ':')
Token(type: NEW_LINE, val: '\n')
Token(type: IDENTIFIER, val: 'a')
Token(type: VARIABLE_ASSIGN, val: 'db')
Token(type: IDENTIFIER, val: 'A')
Token(type: NEW_LINE, val: '\n')
Token(type: IDENTIFIER, val: 'b')
Token(type: TAB, val: '	')
Token(type: VARIABLE_ASSIGN, val: 'db')
Token(type: IDENTIFIER, val: 'B')
Token(type: NEW_LINE, val: '\n')
Token(type: IDENTIFIER, val: 'suma')
Token(type: VARIABLE_ASSIGN, val: 'db')
Token(type: IDENTIFIER, val: '0')
Token(type: NEW_LINE, val: '\n')
Token(type: IDENTIFIER, val: 'resta')
Token(type: VARIABLE_ASSIGN, val: 'db')
Token(type: IDENTIFIER, val: '0')
Token(type: NEW_LINE, val: '\n')
Token(type: IDENTIFIER, val: 'resultado')
Token(type: VARIABLE_ASSIGN, val: 'db')
Token(type: IDENTIFIER, val: '0')
Token(type: NEW_LINE, val: '\n')
Token(type: IDENTIFIER, val: 'start')
Token(type: COLON, val: ':')
Token(type: NEW_LINE, val: '\n')
Token(type: TAB, val: '	')
Token(type: OPERATOR, val: 'LOADIM')
Token(type: REGISTER, val: 'R1')
Token(type: COMMA, val: ',')
Token(type: IDENTIFIER, val: '#5')
Token(type: NEW_LINE, val: '\n')
Token(type: TAB, val: '	')
Token(type: OPERATOR, val: 'LOADIM')
Token(type: REGISTER, val: 'R2')
Token(type: COMMA, val: ',')
Token(type: IDENTIFIER, val: '#F')
Token(type: NEW_LINE, val: '\n')
Token(type: TAB, val: '	')
Token(type: OPERATOR, val: 'ADD')
Token(type: REGISTER, val: 'R3')
Token(type: COMMA, val: ',')
Token(type: REGISTER, val: 'R1')
Token(type: COMMA, val: ',')
Token(type: REGISTER, val: 'R2')
Token(type: NEW_LINE, val: '\n')
Token(type: TAB, val: '	')
Token(type: OPERATOR, val: 'STORE')
Token(type: IDENTIFIER, val: 'suma')
Token(type: COMMA, val: ',')
Token(type: REGISTER, val: 'R3')
Token(type: NEW_LINE, val: '\n')
Token(type: TAB, val: '	')
Token(type: OPERATOR, val: 'SUB')
Token(type: REGISTER, val: 'R3')
Token(type: COMMA, val: ',')
Token(type: REGISTER, val: 'R1')
Token(type: COMMA, val: ',')
Token(type: REGISTER, val: 'R2')
Token(type: NEW_LINE, val: '\n')
Token(type: TAB, val: '	')
Token(type: OPERATOR, val: 'STORE')
Token(type: IDENTIFIER, val: 'resta')
Token(type: COMMA, val: ',')
Token(type: REGISTER, val: 'R3')
Token(type: NEW_LINE, val: '\n')
Token(type: TAB, val: '	')
Token(type: OPERATOR, val: 'AND')
Token(type: REGISTER, val: 'R3')
Token(type: COMMA, val: ',')
Token(type: REGISTER, val: 'R1')
Token(type: COMMA, val: ',')
Token(type: REGISTER, val: 'R2')
Token(type: NEW_LINE, val: '\n')
Token(type: TAB, val: '	')
Token(type: OPERATOR, val: 'STORE')
Token(type: IDENTIFIER, val: 'resultado')
Token(type: COMMA, val: ',')
Token(type: REGISTER, val: 'R3')
Token(type: NEW_LINE, val: '\n')
Token(type: IDENTIFIER, val: 'fin')
Token(type: COLON, val: ':')
Token(type: NEW_LINE, val: '\n')
Token(type: TAB, val: '	')
Token(type: OPERATOR, val: 'JMPADDR')
Token(type: IDENTIFIER, val: 'fin')
Token(type: NEW_LINE, val: '\n')
Token(type: TAB, val: '	')
Token(type: NEW_LINE, val: '\n')